{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-31T19:09:21.340Z",
    "end": "2023-10-31T19:09:21.362Z",
    "duration": 22,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "74699b53-4d15-4960-9e7a-01740f888661",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = new NumbersValidator();",
          "err": {},
          "uuid": "13840444-89d8-416b-a4f0-65a52d4999a2",
          "parentUUID": "74699b53-4d15-4960-9e7a-01740f888661",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = null;",
          "err": {},
          "uuid": "157f8ab1-2ea6-4d12-9fea-d2df457e07d2",
          "parentUUID": "74699b53-4d15-4960-9e7a-01740f888661",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "ea0eb2a8-6790-4f44-8156-d2753369562e",
          "title": "Check isNumberEven method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when even number is provided",
              "fullTitle": "Check isNumberEven method should return true when even number is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\n// chai feature\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "5044e1c1-05e1-48ff-bf5d-acc570287a2e",
              "parentUUID": "ea0eb2a8-6790-4f44-8156-d2753369562e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when odd number is provided",
              "fullTitle": "Check isNumberEven method should return false when odd number is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\n// chai feature\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "31f1d895-86ff-450d-ba2d-27f4dcad30fb",
              "parentUUID": "ea0eb2a8-6790-4f44-8156-d2753369562e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when string is provided",
              "fullTitle": "Check isNumberEven method should throw an error when string is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(`[4] is not of type \"Number\" it is of type \"string\"`);",
              "err": {},
              "uuid": "5ec59857-906a-48f7-b77e-503120a90386",
              "parentUUID": "ea0eb2a8-6790-4f44-8156-d2753369562e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5044e1c1-05e1-48ff-bf5d-acc570287a2e",
            "31f1d895-86ff-450d-ba2d-27f4dcad30fb",
            "5ec59857-906a-48f7-b77e-503120a90386"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b15557b1-5b1a-4e19-a837-1d5fa319be0b",
          "title": "Check getEvenNumbersFromArray method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true of even numbers",
              "fullTitle": "Check getEvenNumbersFromArray method should return true of even numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([2, 5, 8, 67]);\nexpect(validationResults).to.have.all.members([2, 8]);",
              "err": {},
              "uuid": "b5f6a2f4-a5f9-453c-b41f-833e67881de0",
              "parentUUID": "b15557b1-5b1a-4e19-a837-1d5fa319be0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when array of strings is provided",
              "fullTitle": "Check getEvenNumbersFromArray method should throw an error when array of strings is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray(['8', '67']);\n}).to.throw(`[8,67] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "bc1f911a-6f05-49bf-8231-cbbf143222b2",
              "parentUUID": "b15557b1-5b1a-4e19-a837-1d5fa319be0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5f6a2f4-a5f9-453c-b41f-833e67881de0",
            "bc1f911a-6f05-49bf-8231-cbbf143222b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a932b759-cee9-45b7-8877-142bc64a2ad5",
          "title": "Check isAllNumbers method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return true if all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, 10, 44]);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "127ff62c-e710-42ee-a4e9-895532cfe33a",
              "parentUUID": "a932b759-cee9-45b7-8877-142bc64a2ad5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if not all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return false if not all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, '9', 44]);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "9687b543-0a36-4e1b-b3ab-c96b7452373c",
              "parentUUID": "a932b759-cee9-45b7-8877-142bc64a2ad5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when not array is provided",
              "fullTitle": "Check isAllNumbers method should throw an error when not array is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers('8');\n}).to.throw(`[8] is not an array`);",
              "err": {},
              "uuid": "1f766f68-81a1-4f0b-a09d-fbdbc882ab7c",
              "parentUUID": "a932b759-cee9-45b7-8877-142bc64a2ad5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "127ff62c-e710-42ee-a4e9-895532cfe33a",
            "9687b543-0a36-4e1b-b3ab-c96b7452373c",
            "1f766f68-81a1-4f0b-a09d-fbdbc882ab7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f88cbd17-8880-4614-881a-2ae96a2cb6b8",
          "title": "Check isInteger method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if integer is provided",
              "fullTitle": "Check isInteger method should return true if integer is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.equal(true);",
              "err": {},
              "uuid": "7988b9ed-ba02-40e7-8cc1-9176e388dfbe",
              "parentUUID": "f88cbd17-8880-4614-881a-2ae96a2cb6b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if string is provided",
              "fullTitle": "Check isInteger method should throw an error if string is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger('6');\n}).to.throw(`[6] is not a number`);",
              "err": {},
              "uuid": "2b4eda09-f3fa-4621-b15d-95ac13366e97",
              "parentUUID": "f88cbd17-8880-4614-881a-2ae96a2cb6b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7988b9ed-ba02-40e7-8cc1-9176e388dfbe",
            "2b4eda09-f3fa-4621-b15d-95ac13366e97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}