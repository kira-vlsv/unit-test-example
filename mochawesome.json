{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-31T19:01:36.071Z",
    "end": "2023-10-31T19:01:36.082Z",
    "duration": 11,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "385b7d31-2cd1-4982-9c68-1b44b1170a14",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = new NumbersValidator();",
          "err": {},
          "uuid": "1ddf8557-db4a-49ad-a1b6-fe99c92b1c77",
          "parentUUID": "385b7d31-2cd1-4982-9c68-1b44b1170a14",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = null;",
          "err": {},
          "uuid": "5b15ff26-8b3e-43dd-90e1-a4f4ca508d4c",
          "parentUUID": "385b7d31-2cd1-4982-9c68-1b44b1170a14",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "061432fc-d0ae-4090-a705-084dd78ff5aa",
          "title": "Check isNumberEven method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when even number is provided",
              "fullTitle": "Check isNumberEven method should return true when even number is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\n// chai feature\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "d028e03b-8c56-4acc-b3e4-46803762894e",
              "parentUUID": "061432fc-d0ae-4090-a705-084dd78ff5aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when odd number is provided",
              "fullTitle": "Check isNumberEven method should return false when odd number is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\n// chai feature\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "e1774675-c405-41fc-8dd3-1e9e0d790f6a",
              "parentUUID": "061432fc-d0ae-4090-a705-084dd78ff5aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when string is provided",
              "fullTitle": "Check isNumberEven method should throw an error when string is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(`[4] is not of type \"Number\" it is of type \"string\"`);",
              "err": {},
              "uuid": "845b0a72-42c6-44ab-91c9-93c9fabe9162",
              "parentUUID": "061432fc-d0ae-4090-a705-084dd78ff5aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d028e03b-8c56-4acc-b3e4-46803762894e",
            "e1774675-c405-41fc-8dd3-1e9e0d790f6a",
            "845b0a72-42c6-44ab-91c9-93c9fabe9162"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ffa07ab4-b31a-4bef-aafa-ee65f9f68258",
          "title": "Check getEvenNumbersFromArray method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true of even numbers",
              "fullTitle": "Check getEvenNumbersFromArray method should return true of even numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([2, 5, 8, 67]);\nexpect(validationResults).to.have.all.members([2, 8]);",
              "err": {},
              "uuid": "e8da4e42-2754-4c77-8232-4c1b7245a604",
              "parentUUID": "ffa07ab4-b31a-4bef-aafa-ee65f9f68258",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when array of strings is provided",
              "fullTitle": "Check getEvenNumbersFromArray method should throw an error when array of strings is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray(['8', '67']);\n}).to.throw(`[8,67] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "65a7f8e5-7ee4-4f32-813d-c23e2721ca2b",
              "parentUUID": "ffa07ab4-b31a-4bef-aafa-ee65f9f68258",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8da4e42-2754-4c77-8232-4c1b7245a604",
            "65a7f8e5-7ee4-4f32-813d-c23e2721ca2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "125cb744-2cae-49ae-a24a-9e705c2653e7",
          "title": "Check isAllNumbers method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return true if all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, 10, 44]);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "56c95f31-80cb-4999-a4c7-eee2c8de15e2",
              "parentUUID": "125cb744-2cae-49ae-a24a-9e705c2653e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if not all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return false if not all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, '9', 44]);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "2e7f305f-dda3-41c4-8408-e33d4f235f1b",
              "parentUUID": "125cb744-2cae-49ae-a24a-9e705c2653e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when not array is provided",
              "fullTitle": "Check isAllNumbers method should throw an error when not array is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers('8');\n}).to.throw(`[8] is not an array`);",
              "err": {},
              "uuid": "e00e27ef-8674-41b8-b6ea-b6730e4d9f0f",
              "parentUUID": "125cb744-2cae-49ae-a24a-9e705c2653e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56c95f31-80cb-4999-a4c7-eee2c8de15e2",
            "2e7f305f-dda3-41c4-8408-e33d4f235f1b",
            "e00e27ef-8674-41b8-b6ea-b6730e4d9f0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2a2ea7ab-ff92-4686-a039-5a1f568f656e",
          "title": "Check isInteger method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if integer is provided",
              "fullTitle": "Check isInteger method should return true if integer is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.equal(true);",
              "err": {},
              "uuid": "4a130817-65da-469c-ba39-5b2c730137bc",
              "parentUUID": "2a2ea7ab-ff92-4686-a039-5a1f568f656e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if string is provided",
              "fullTitle": "Check isInteger method should throw an error if string is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger('6');\n}).to.throw(`[6] is not a number`);",
              "err": {},
              "uuid": "6c285046-0364-4297-b103-15bb7b80348f",
              "parentUUID": "2a2ea7ab-ff92-4686-a039-5a1f568f656e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a130817-65da-469c-ba39-5b2c730137bc",
            "6c285046-0364-4297-b103-15bb7b80348f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}