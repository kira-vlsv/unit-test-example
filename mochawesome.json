{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-31T19:11:30.665Z",
    "end": "2023-10-31T19:11:30.692Z",
    "duration": 27,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9a42ffa4-a325-4a7d-b66c-58a944d4372c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = new NumbersValidator();",
          "err": {},
          "uuid": "93215043-005f-4572-867c-c569019a9bbc",
          "parentUUID": "9a42ffa4-a325-4a7d-b66c-58a944d4372c",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = null;",
          "err": {},
          "uuid": "0029e031-5168-4206-b52d-d2f03cefd369",
          "parentUUID": "9a42ffa4-a325-4a7d-b66c-58a944d4372c",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "d4c2112c-10d1-44d9-8ead-72330fa18254",
          "title": "Check isNumberEven method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when even number is provided",
              "fullTitle": "Check isNumberEven method should return true when even number is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\n// chai feature\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "2450b5a5-8bad-48f2-b00d-165d8eea395b",
              "parentUUID": "d4c2112c-10d1-44d9-8ead-72330fa18254",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when odd number is provided",
              "fullTitle": "Check isNumberEven method should return false when odd number is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\n// chai feature\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "e2864a13-6777-438d-94f0-9226812f2277",
              "parentUUID": "d4c2112c-10d1-44d9-8ead-72330fa18254",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when string is provided",
              "fullTitle": "Check isNumberEven method should throw an error when string is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(`[4] is not of type \"Number\" it is of type \"string\"`);",
              "err": {},
              "uuid": "f9cb00d9-d70b-45dd-ab08-547f790ff577",
              "parentUUID": "d4c2112c-10d1-44d9-8ead-72330fa18254",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2450b5a5-8bad-48f2-b00d-165d8eea395b",
            "e2864a13-6777-438d-94f0-9226812f2277",
            "f9cb00d9-d70b-45dd-ab08-547f790ff577"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd22e85b-2937-4fa6-84a9-5ff91c454bcf",
          "title": "Check getEvenNumbersFromArray method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true of even numbers",
              "fullTitle": "Check getEvenNumbersFromArray method should return true of even numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([2, 5, 8, 67]);\nexpect(validationResults).to.have.all.members([2, 8]);",
              "err": {},
              "uuid": "9bbaf66a-b60d-4627-a2b2-68467b617ac5",
              "parentUUID": "dd22e85b-2937-4fa6-84a9-5ff91c454bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when array of strings is provided",
              "fullTitle": "Check getEvenNumbersFromArray method should throw an error when array of strings is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray(['8', '67']);\n}).to.throw(`[8,67] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "96f9b657-9ca6-4855-b3ee-89c4ac0175e7",
              "parentUUID": "dd22e85b-2937-4fa6-84a9-5ff91c454bcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bbaf66a-b60d-4627-a2b2-68467b617ac5",
            "96f9b657-9ca6-4855-b3ee-89c4ac0175e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c4b3a0d-0868-422b-8243-90c67a10bd34",
          "title": "Check isAllNumbers method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return true if all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, 10, 44]);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "f8380669-9a1a-4630-b055-ff4fa7cc7b81",
              "parentUUID": "7c4b3a0d-0868-422b-8243-90c67a10bd34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if not all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return false if not all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, '9', 44]);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "7447b8c0-629b-490c-92ac-9f1f54a33023",
              "parentUUID": "7c4b3a0d-0868-422b-8243-90c67a10bd34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when not array is provided",
              "fullTitle": "Check isAllNumbers method should throw an error when not array is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers('8');\n}).to.throw(`[8] is not an array`);",
              "err": {},
              "uuid": "b498e80d-d2ca-4f84-87af-c7cdaae78549",
              "parentUUID": "7c4b3a0d-0868-422b-8243-90c67a10bd34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8380669-9a1a-4630-b055-ff4fa7cc7b81",
            "7447b8c0-629b-490c-92ac-9f1f54a33023",
            "b498e80d-d2ca-4f84-87af-c7cdaae78549"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a32106dd-25b0-4e33-a26f-103b34114e43",
          "title": "Check isInteger method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if integer is provided",
              "fullTitle": "Check isInteger method should return true if integer is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.equal(true);",
              "err": {},
              "uuid": "e0a83673-14d8-4023-a22d-d540fafd9c56",
              "parentUUID": "a32106dd-25b0-4e33-a26f-103b34114e43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if string is provided",
              "fullTitle": "Check isInteger method should throw an error if string is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger('6');\n}).to.throw(`[6] is not a number`);",
              "err": {},
              "uuid": "2a9ca9d8-734f-4244-b26c-b8eddea42c59",
              "parentUUID": "a32106dd-25b0-4e33-a26f-103b34114e43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0a83673-14d8-4023-a22d-d540fafd9c56",
            "2a9ca9d8-734f-4244-b26c-b8eddea42c59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}