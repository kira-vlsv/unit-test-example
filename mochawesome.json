{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-31T18:52:45.694Z",
    "end": "2023-10-31T18:52:45.703Z",
    "duration": 9,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b82d7e9-ea2b-49fc-b989-0998bb9d77c3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = new NumbersValidator();",
          "err": {},
          "uuid": "f6fdf57c-f3c0-4a62-9188-e6df9bb054ef",
          "parentUUID": "8b82d7e9-ea2b-49fc-b989-0998bb9d77c3",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "validator = null;",
          "err": {},
          "uuid": "5cb6c097-dbcc-4e49-ab8d-fa73cdc0b3c4",
          "parentUUID": "8b82d7e9-ea2b-49fc-b989-0998bb9d77c3",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "6cb1bf24-dd84-4b3f-9753-287753615db3",
          "title": "Check isNumberEven method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when even number is provided",
              "fullTitle": "Check isNumberEven method should return true when even number is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(4);\n// chai feature\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "14dd39b3-2e0c-4404-9993-4a2315f840ef",
              "parentUUID": "6cb1bf24-dd84-4b3f-9753-287753615db3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when odd number is provided",
              "fullTitle": "Check isNumberEven method should return false when odd number is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isNumberEven(5);\n// chai feature\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "c6183f2d-bbec-40f1-bbf2-45852925faff",
              "parentUUID": "6cb1bf24-dd84-4b3f-9753-287753615db3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when string is provided",
              "fullTitle": "Check isNumberEven method should throw an error when string is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isNumberEven('4');\n}).to.throw(`[4] is not of type \"Number\" it is of type \"string\"`);",
              "err": {},
              "uuid": "0ca3d8f7-5c25-4714-a814-c219b80208c6",
              "parentUUID": "6cb1bf24-dd84-4b3f-9753-287753615db3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14dd39b3-2e0c-4404-9993-4a2315f840ef",
            "c6183f2d-bbec-40f1-bbf2-45852925faff",
            "0ca3d8f7-5c25-4714-a814-c219b80208c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "59183ff8-7dda-45c2-a905-d3b2e13d4e2b",
          "title": "Check getEvenNumbersFromArray method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true of even numbers",
              "fullTitle": "Check getEvenNumbersFromArray method should return true of even numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.getEvenNumbersFromArray([2, 5, 8, 67]);\nexpect(validationResults).to.have.all.members([2, 8]);",
              "err": {},
              "uuid": "1aefc0ee-b684-42db-adf4-8c3b0c4a2e5a",
              "parentUUID": "59183ff8-7dda-45c2-a905-d3b2e13d4e2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when array of strings is provided",
              "fullTitle": "Check getEvenNumbersFromArray method should throw an error when array of strings is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.getEvenNumbersFromArray(['8', '67']);\n}).to.throw(`[8,67] is not an array of \"Numbers\"`);",
              "err": {},
              "uuid": "12b02028-c14e-4955-9095-3183cb539499",
              "parentUUID": "59183ff8-7dda-45c2-a905-d3b2e13d4e2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1aefc0ee-b684-42db-adf4-8c3b0c4a2e5a",
            "12b02028-c14e-4955-9095-3183cb539499"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a4f3a18-c6fd-4d92-9e3a-37844196819e",
          "title": "Check isAllNumbers method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return true if all elements are numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, 10, 44]);\nexpect(validationResults).to.be.equal(true);",
              "err": {},
              "uuid": "c3a93cb3-d523-404d-b6b4-4febb63ba6a8",
              "parentUUID": "8a4f3a18-c6fd-4d92-9e3a-37844196819e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if not all elements are numbers",
              "fullTitle": "Check isAllNumbers method should return false if not all elements are numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const validationResults = validator.isAllNumbers([4, 8, '9', 44]);\nexpect(validationResults).to.be.equal(false);",
              "err": {},
              "uuid": "97c5eec9-d0f5-401e-9be7-17fc49650b10",
              "parentUUID": "8a4f3a18-c6fd-4d92-9e3a-37844196819e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when not array is provided",
              "fullTitle": "Check isAllNumbers method should throw an error when not array is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isAllNumbers('8');\n}).to.throw(`[8] is not an array`);",
              "err": {},
              "uuid": "a6cd4b26-31f3-40f5-8499-f911b79dcc43",
              "parentUUID": "8a4f3a18-c6fd-4d92-9e3a-37844196819e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a93cb3-d523-404d-b6b4-4febb63ba6a8",
            "97c5eec9-d0f5-401e-9be7-17fc49650b10",
            "a6cd4b26-31f3-40f5-8499-f911b79dcc43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5fdc8a41-ab71-4884-a899-6208daf01005",
          "title": "Check isInteger method",
          "fullFile": "/home/runner/work/unit-test-example/unit-test-example/test/numbers-validator/isNumberEven.spec.js",
          "file": "/test/numbers-validator/isNumberEven.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if integer is provided",
              "fullTitle": "Check isInteger method should return true if integer is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(validator.isInteger(4)).to.be.equal(true);",
              "err": {},
              "uuid": "fdb1fd7f-03d6-45a4-8282-f5aa132b8f2d",
              "parentUUID": "5fdc8a41-ab71-4884-a899-6208daf01005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if string is provided",
              "fullTitle": "Check isInteger method should throw an error if string is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => {\n  validator.isInteger('6');\n}).to.throw(`[6] is not a number`);",
              "err": {},
              "uuid": "316ee914-9c89-4072-b882-1c4b7bd39a75",
              "parentUUID": "5fdc8a41-ab71-4884-a899-6208daf01005",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fdb1fd7f-03d6-45a4-8282-f5aa132b8f2d",
            "316ee914-9c89-4072-b882-1c4b7bd39a75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}